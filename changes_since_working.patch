diff --git a/.vscode/settings.json b/.vscode/settings.json
index e32327a..da48013 100644
--- a/.vscode/settings.json
+++ b/.vscode/settings.json
@@ -57,5 +57,9 @@
   "C_Cpp_Runner.useLinkTimeOptimization": false,
   "C_Cpp_Runner.msvcSecureNoWarnings": false,
   "cmake.ignoreCMakeListsMissing": true,
-  "java.configuration.updateBuildConfiguration": "automatic"
+  "java.configuration.updateBuildConfiguration": "automatic",
+  "files.exclude": {
+    "**/generated_plugin_registrant.cc": true
+  },
+  "C_Cpp.errorSquiggles": "disabled"
 }
\ No newline at end of file
diff --git a/android/app/build.gradle.kts b/android/app/build.gradle.kts
index cd956bf..397891e 100644
--- a/android/app/build.gradle.kts
+++ b/android/app/build.gradle.kts
@@ -3,11 +3,17 @@ plugins {
     id("kotlin-android")
     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
     id("dev.flutter.flutter-gradle-plugin")
+    id("com.google.gms.google-services")
+}
+dependencies {
+    implementation(platform("com.google.firebase:firebase-bom:33.13.0"))
+    implementation("com.google.firebase:firebase-auth")
+    // ...weitere Abhängigkeiten...
 }
 
 android {
-    namespace = "com.example.jugend_app"
-    compileSdk = flutter.compileSdkVersion
+    namespace = "com.jugend_app.GatherUp"
+    compileSdk = 35
     ndkVersion = "27.0.12077973"
 
     compileOptions {
@@ -21,11 +27,11 @@ android {
 
     defaultConfig {
         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
-        applicationId = "com.example.jugend_app"
+        applicationId = "com.jugend_app.GatherUp"
         // You can update the following values to match your application needs.
         // For more information, see: https://flutter.dev/to/review-gradle-config.
-        minSdk = flutter.minSdkVersion
-        targetSdk = flutter.targetSdkVersion
+        minSdk = 23
+        targetSdk = 34
         versionCode = flutter.versionCode
         versionName = flutter.versionName
     }
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
index fe03962..875595c 100644
--- a/android/app/src/main/AndroidManifest.xml
+++ b/android/app/src/main/AndroidManifest.xml
@@ -1,41 +1,40 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android">
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.jugend_app.GatherUp">
+
+    <uses-permission android:name="android.permission.INTERNET"/>
+
     <application
         android:label="jugend_app"
-        android:name="${applicationName}"
         android:icon="@mipmap/ic_launcher">
+
         <activity
-            android:name=".MainActivity"
+            android:name="com.jugend_app.GatherUp.MainActivity"
             android:exported="true"
             android:launchMode="singleTop"
-            android:taskAffinity=""
             android:theme="@style/LaunchTheme"
             android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
             android:hardwareAccelerated="true"
             android:windowSoftInputMode="adjustResize">
-            <!-- Specifies an Android theme to apply to this Activity as soon as
-                 the Android process has started. This theme is visible to the user
-                 while the Flutter UI initializes. After that, this theme continues
-                 to determine the Window background behind the Flutter UI. -->
+
+            <!-- Theme, das NACH dem Splash greift -->
             <meta-data
-              android:name="io.flutter.embedding.android.NormalTheme"
-              android:resource="@style/NormalTheme"
-              />
+                android:name="io.flutter.embedding.android.NormalTheme"
+                android:resource="@style/NormalTheme" />
+
+            <!-- Erzwingt Flutter-Embedding v2 -->
+            <meta-data
+                android:name="flutterEmbedding"
+                android:value="2" />
+
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
                 <category android:name="android.intent.category.LAUNCHER"/>
             </intent-filter>
         </activity>
-        <!-- Don't delete the meta-data below.
-             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
-        <meta-data
-            android:name="flutterEmbedding"
-            android:value="2" />
     </application>
-    <!-- Required to query activities that can process text, see:
-         https://developer.android.com/training/package-visibility and
-         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.
 
-         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
+    <!-- Für Process-Text-Plugin -->
     <queries>
         <intent>
             <action android:name="android.intent.action.PROCESS_TEXT"/>
diff --git a/android/app/src/main/kotlin/com/example/jugend_app/MainActivity.kt b/android/app/src/main/kotlin/com/example/jugend_app/MainActivity.kt
deleted file mode 100644
index 5ef5e01..0000000
--- a/android/app/src/main/kotlin/com/example/jugend_app/MainActivity.kt
+++ /dev/null
@@ -1,5 +0,0 @@
-package com.example.jugend_app
-
-import io.flutter.embedding.android.FlutterActivity
-
-class MainActivity : FlutterActivity()
diff --git a/android/build.gradle.kts b/android/build.gradle.kts
index 89176ef..5dea29f 100644
--- a/android/build.gradle.kts
+++ b/android/build.gradle.kts
@@ -8,6 +8,12 @@ allprojects {
 val newBuildDir: Directory = rootProject.layout.buildDirectory.dir("../../build").get()
 rootProject.layout.buildDirectory.value(newBuildDir)
 
+plugins {
+    // ...eventuell andere Plugins...
+    id("com.google.gms.google-services") version "4.4.2" apply false
+}
+// ...existing code...
+
 subprojects {
     val newSubprojectBuildDir: Directory = newBuildDir.dir(project.name)
     project.layout.buildDirectory.value(newSubprojectBuildDir)
diff --git a/android/gradle/wrapper/gradle-wrapper.properties b/android/gradle/wrapper/gradle-wrapper.properties
index 348c409..afa1e8e 100644
--- a/android/gradle/wrapper/gradle-wrapper.properties
+++ b/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-8.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.10.2-all.zip
diff --git a/android/settings.gradle.kts b/android/settings.gradle.kts
index a439442..2b96346 100644
--- a/android/settings.gradle.kts
+++ b/android/settings.gradle.kts
@@ -19,7 +19,7 @@ pluginManagement {
 plugins {
     id("dev.flutter.flutter-plugin-loader") version "1.0.0"
     id("com.android.application") version "8.7.0" apply false
-    id("org.jetbrains.kotlin.android") version "1.8.22" apply false
+    id("org.jetbrains.kotlin.android") version "2.1.21" apply false
 }
 
 include(":app")
diff --git a/lib.zip b/lib.zip
deleted file mode 100644
index 3841f9b..0000000
Binary files a/lib.zip and /dev/null differ
diff --git a/lib/l10n/app_de.arb b/lib/l10n/app_de.arb
index 9010941..fa3926f 100644
--- a/lib/l10n/app_de.arb
+++ b/lib/l10n/app_de.arb
@@ -31,14 +31,25 @@
   "labelCancel": "Abbrechen",
   "@labelCancel": {"description": "Button-Text für Abbrechen"},
   "feedbackTitle": "Feedback",
+  "@feedbackTitle": {"description": "Titel für Feedback-Bereich"},
   "feedbackFormTitle": "Dein Feedback",
+  "@feedbackFormTitle": {"description": "Titel für das Feedback-Formular"},
   "feedbackName": "Dein Name (optional)",
+  "@feedbackName": {"description": "Feld für optionalen Namen im Feedback-Formular"},
   "feedbackMessage": "Nachricht",
+  "@feedbackMessage": {"description": "Feld für Feedback-Nachricht"},
   "feedbackMessageRequired": "Bitte gib eine Nachricht ein.",
+  "@feedbackMessageRequired": {"description": "Fehlermeldung, wenn Nachricht fehlt"},
   "feedbackRating": "Bewertung:",
+  "@feedbackRating": {"description": "Label für Bewertungssterne im Feedback"},
   "feedbackSubmit": "Absenden",
+  "@feedbackSubmit": {"description": "Button-Text für Feedback absenden"},
   "feedbackSuccess": "Danke für dein Feedback!",
+  "@feedbackSuccess": {"description": "Erfolgsnachricht nach Feedback-Abgabe"},
   "feedbackListTitle": "Letzte Rückmeldungen",
+  "@feedbackListTitle": {"description": "Titel für Feedback-Liste"},
   "feedbackListEmpty": "Noch kein Feedback vorhanden.",
-  "feedbackAnonymous": "Anonym"
+  "@feedbackListEmpty": {"description": "Text, wenn keine Feedbacks vorhanden sind"},
+  "feedbackAnonymous": "Anonym",
+  "@feedbackAnonymous": {"description": "Text für anonymes Feedback"}
 } 
\ No newline at end of file
diff --git a/lib/main.dart b/lib/main.dart
index f229cfc..b7251c5 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -10,9 +10,21 @@ import 'package:flutter_localizations/flutter_localizations.dart';
 import 'package:flutter_gen/gen_l10n/app_localizations.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 
+final localeProvider = StateProvider<Locale?>((ref) => const Locale('de'));
+
 void main() async {
   WidgetsFlutterBinding.ensureInitialized();
-  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
+
+  debugPrint('⏳ 1/3 – Starte Firebase.init');
+
+  if (Firebase.apps.isEmpty) {
+    // <— NEU
+    await Firebase.initializeApp(
+      options: DefaultFirebaseOptions.currentPlatform,
+    );
+  }
+
+  debugPrint('✅ 2/3 – Firebase fertig, rufe runApp');
 
   FlutterError.onError = (FlutterErrorDetails details) {
     FeedbackService.instance.showError(details.exceptionAsString());
@@ -29,11 +41,12 @@ void main() async {
   );
 }
 
-class MyApp extends StatelessWidget {
+class MyApp extends ConsumerWidget {
   const MyApp({super.key});
 
   @override
-  Widget build(BuildContext context) {
+  Widget build(BuildContext context, WidgetRef ref) {
+    final locale = ref.watch(localeProvider);
     return MaterialApp.router(
       title: 'GatherUp',
       debugShowCheckedModeBanner: false,
@@ -49,7 +62,7 @@ class MyApp extends StatelessWidget {
         GlobalCupertinoLocalizations.delegate,
       ],
       supportedLocales: const [Locale('de'), Locale('en')],
-      locale: const Locale('de'),
+      locale: locale,
       builder: (context, child) {
         return FeedbackListener(child: child!);
       },
diff --git a/lib/presentation/screens/games_catalog_screen.dart b/lib/presentation/screens/games_catalog_screen.dart
index 22d619a..486452a 100644
--- a/lib/presentation/screens/games_catalog_screen.dart
+++ b/lib/presentation/screens/games_catalog_screen.dart
@@ -36,12 +36,13 @@ class GamesCatalogScreen extends ConsumerWidget {
           return LayoutBuilder(
             builder: (context, constraints) {
               int crossAxisCount = 2;
-              if (constraints.maxWidth > 900)
+              if (constraints.maxWidth > 900) {
                 crossAxisCount = 4;
-              else if (constraints.maxWidth > 600)
+              } else if (constraints.maxWidth > 600) {
                 crossAxisCount = 3;
-              else if (constraints.maxWidth < 400)
+              } else if (constraints.maxWidth < 400) {
                 crossAxisCount = 1;
+              }
               return GridView.builder(
                 padding: const EdgeInsets.all(16),
                 gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
@@ -88,7 +89,7 @@ class _GameCard extends StatelessWidget {
                 borderRadius: BorderRadius.circular(16),
                 boxShadow: [
                   BoxShadow(
-                    color: colorScheme.shadow.withOpacity(0.08),
+                    color: colorScheme.shadow.withAlpha((0.08 * 255).toInt()),
                     blurRadius: 6,
                     offset: const Offset(0, 2),
                   ),
diff --git a/lib/presentation/screens/home_screen.dart b/lib/presentation/screens/home_screen.dart
index a5eae5e..3ac1811 100644
--- a/lib/presentation/screens/home_screen.dart
+++ b/lib/presentation/screens/home_screen.dart
@@ -3,6 +3,8 @@
 import 'package:flutter/material.dart';
 import 'package:go_router/go_router.dart';
 import 'package:flutter_gen/gen_l10n/app_localizations.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart' as riverpod;
+import 'package:jugend_app/domain/viewmodels/auth_view_model.dart';
 
 class HomeScreen extends StatelessWidget {
   const HomeScreen({super.key});
@@ -10,75 +12,110 @@ class HomeScreen extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     final l10n = AppLocalizations.of(context)!;
-    return Scaffold(
-      appBar: AppBar(title: Text(l10n.appTitle)),
-      body: LayoutBuilder(
-        builder: (context, constraints) {
-          int crossAxisCount = 2;
-          if (constraints.maxWidth < 500) {
-            crossAxisCount = 1;
-          } else if (constraints.maxWidth > 900) {
-            crossAxisCount = 3;
-          }
-          return Padding(
-            padding: const EdgeInsets.all(16.0),
-            child: GridView.builder(
-              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
-                crossAxisCount: crossAxisCount,
-                crossAxisSpacing: 16,
-                mainAxisSpacing: 16,
-                childAspectRatio: 1.1,
-              ),
-              itemCount: 4,
-              itemBuilder: (context, index) {
-                final tiles = [
-                  _HubTile(
-                    label: 'Games',
-                    icon: Icons.videogame_asset,
-                    onTap: () => context.go('/games'),
-                  ),
-                  _HubTile(
-                    label: l10n.labelPlayers,
-                    icon: Icons.group,
-                    onTap: () => context.go('/lobbies'),
-                  ),
-                  _HubTile(
-                    label: 'Freunde',
-                    icon: Icons.people_outline,
-                    onTap: () => _showComingSoon(context),
-                  ),
-                  _HubTile(
-                    label: 'Feedback',
-                    icon: Icons.feedback_outlined,
-                    onTap: () => context.go('/feedback'),
+    return riverpod.Consumer(
+      builder: (context, ref, _) {
+        final auth = ref.watch(authViewModelProvider);
+        return Scaffold(
+          appBar: AppBar(
+            title: Text(l10n.appTitle),
+            actions: [
+              if (auth.status == AuthStatus.signedIn)
+                IconButton(
+                  icon:
+                      auth.profile?.photoUrl != null
+                          ? CircleAvatar(
+                            backgroundImage: NetworkImage(
+                              auth.profile!.photoUrl!,
+                            ),
+                            radius: 16,
+                          )
+                          : const Icon(Icons.account_circle),
+                  tooltip: 'Profil',
+                  onPressed: () => context.go('/profile'),
+                ),
+            ],
+          ),
+          body: LayoutBuilder(
+            builder: (context, constraints) {
+              int crossAxisCount = 2;
+              if (constraints.maxWidth < 500) {
+                crossAxisCount = 1;
+              } else if (constraints.maxWidth > 900) {
+                crossAxisCount = 3;
+              }
+              return Padding(
+                padding: const EdgeInsets.all(16.0),
+                child: GridView.builder(
+                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+                    crossAxisCount: crossAxisCount,
+                    crossAxisSpacing: 16,
+                    mainAxisSpacing: 16,
+                    childAspectRatio: 1.1,
                   ),
-                ];
-                return tiles[index];
-              },
-            ),
-          );
-        },
-      ),
+                  itemCount: 4,
+                  itemBuilder: (context, index) {
+                    final tiles = [
+                      _HubTile(
+                        label: 'Games',
+                        icon: Icons.videogame_asset,
+                        onTap: () => context.go('/games'),
+                      ),
+                      _HubTile(
+                        label: l10n.labelPlayers,
+                        icon: Icons.group,
+                        onTap: () => context.go('/lobbies'),
+                      ),
+                      _HubTile(
+                        label: 'Freunde',
+                        icon: Icons.people_outline,
+                        onTap: () => _onFriendsTap(context, auth),
+                      ),
+                      _HubTile(
+                        label: 'Feedback',
+                        icon: Icons.feedback_outlined,
+                        onTap: () => context.go('/feedback'),
+                      ),
+                    ];
+                    return tiles[index];
+                  },
+                ),
+              );
+            },
+          ),
+        );
+      },
     );
   }
 
-  void _showComingSoon(BuildContext context) {
-    showDialog(
+  void _onFriendsTap(BuildContext context, AuthState auth) async {
+    if (auth.status == AuthStatus.signedIn) {
+      context.go('/friends');
+      return;
+    }
+    final result = await showDialog<bool>(
       context: context,
       builder:
           (context) => AlertDialog(
-            title: const Text('Noch nicht verfügbar'),
+            title: const Text('Login erforderlich'),
             content: const Text(
-              'Dieses Feature wird in einem zukünftigen Update verfügbar sein.',
+              'Dieses Feature funktioniert nur, wenn du eingeloggt bist. Jetzt einloggen?',
             ),
             actions: [
               TextButton(
-                onPressed: () => Navigator.pop(context),
-                child: const Text('OK'),
+                onPressed: () => Navigator.pop(context, false),
+                child: const Text('Nein'),
+              ),
+              ElevatedButton(
+                onPressed: () => Navigator.pop(context, true),
+                child: const Text('Ja, einloggen'),
               ),
             ],
           ),
     );
+    if (result == true) {
+      if (!context.mounted) return;
+      context.go('/auth');
+    }
   }
 }
 
diff --git a/lib/router.dart b/lib/router.dart
index 3f615d2..547ca43 100644
--- a/lib/router.dart
+++ b/lib/router.dart
@@ -17,6 +17,50 @@ import 'package:flutter/material.dart';
 import 'package:jugend_app/presentation/screens/feedback_screen.dart';
 import 'package:jugend_app/presentation/screens/games_catalog_screen.dart';
 import 'package:jugend_app/presentation/screens/game_detail_screen.dart';
+import 'package:jugend_app/presentation/screens/auth_screen.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart' as riverpod;
+import 'package:jugend_app/domain/viewmodels/auth_view_model.dart';
+import 'package:jugend_app/presentation/screens/profile_screen.dart';
+
+class AuthGuard extends StatelessWidget {
+  final Widget child;
+  const AuthGuard({required this.child, super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return riverpod.Consumer(
+      builder: (context, ref, _) {
+        final auth = ref.watch(authViewModelProvider);
+        if (auth.status == AuthStatus.loading) {
+          return const Scaffold(
+            body: Center(child: CircularProgressIndicator()),
+          );
+        }
+        if (auth.status == AuthStatus.signedOut) {
+          WidgetsBinding.instance.addPostFrameCallback((_) {
+            if (ModalRoute.of(context)?.settings.name != '/auth') {
+              GoRouter.of(context).go('/auth');
+            }
+          });
+          return const SizedBox.shrink();
+        }
+        return child;
+      },
+    );
+  }
+}
+
+class FriendsScreen extends StatelessWidget {
+  const FriendsScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text('Freunde')),
+      body: const Center(child: Text('Freunde-Feature kommt demnächst!')),
+    );
+  }
+}
 
 final GoRouter appRouter = GoRouter(
   initialLocation: '/reconnect',
@@ -137,6 +181,22 @@ final GoRouter appRouter = GoRouter(
         return _fadeTransitionPage(GameDetailScreen(gameId: id));
       },
     ),
+    GoRoute(
+      path: '/auth',
+      pageBuilder: (context, state) => _fadeTransitionPage(const AuthScreen()),
+    ),
+    GoRoute(
+      path: '/friends',
+      pageBuilder:
+          (context, state) =>
+              _fadeTransitionPage(AuthGuard(child: const FriendsScreen())),
+    ),
+    GoRoute(
+      path: '/profile',
+      pageBuilder:
+          (context, state) =>
+              _fadeTransitionPage(AuthGuard(child: const ProfileScreen())),
+    ),
   ],
 );
 
diff --git a/linux/flutter/generated_plugin_registrant.cc b/linux/flutter/generated_plugin_registrant.cc
index e71a16d..64a0ece 100644
--- a/linux/flutter/generated_plugin_registrant.cc
+++ b/linux/flutter/generated_plugin_registrant.cc
@@ -6,6 +6,10 @@
 
 #include "generated_plugin_registrant.h"
 
+#include <file_selector_linux/file_selector_plugin.h>
 
 void fl_register_plugins(FlPluginRegistry* registry) {
+  g_autoptr(FlPluginRegistrar) file_selector_linux_registrar =
+      fl_plugin_registry_get_registrar_for_plugin(registry, "FileSelectorPlugin");
+  file_selector_plugin_register_with_registrar(file_selector_linux_registrar);
 }
diff --git a/linux/flutter/generated_plugins.cmake b/linux/flutter/generated_plugins.cmake
index 2e1de87..2db3c22 100644
--- a/linux/flutter/generated_plugins.cmake
+++ b/linux/flutter/generated_plugins.cmake
@@ -3,6 +3,7 @@
 #
 
 list(APPEND FLUTTER_PLUGIN_LIST
+  file_selector_linux
 )
 
 list(APPEND FLUTTER_FFI_PLUGIN_LIST
diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
index 83e20a7..94c7626 100644
--- a/macos/Flutter/GeneratedPluginRegistrant.swift
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift
@@ -7,14 +7,22 @@ import Foundation
 
 import cloud_firestore
 import device_info_plus
+import file_selector_macos
+import firebase_auth
 import firebase_core
 import firebase_database
+import firebase_storage
+import google_sign_in_ios
 import shared_preferences_foundation
 
 func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
   FLTFirebaseFirestorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseFirestorePlugin"))
   DeviceInfoPlusMacosPlugin.register(with: registry.registrar(forPlugin: "DeviceInfoPlusMacosPlugin"))
+  FileSelectorPlugin.register(with: registry.registrar(forPlugin: "FileSelectorPlugin"))
+  FLTFirebaseAuthPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseAuthPlugin"))
   FLTFirebaseCorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseCorePlugin"))
   FLTFirebaseDatabasePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseDatabasePlugin"))
+  FLTFirebaseStoragePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseStoragePlugin"))
+  FLTGoogleSignInPlugin.register(with: registry.registrar(forPlugin: "FLTGoogleSignInPlugin"))
   SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: "SharedPreferencesPlugin"))
 }
diff --git a/pubspec.lock b/pubspec.lock
index 6ee4db7..ac7590d 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -85,10 +85,10 @@ packages:
     dependency: "direct dev"
     description:
       name: build_runner
-      sha256: "058fe9dce1de7d69c4b84fada934df3e0153dd000758c4d65964d0166779aa99"
+      sha256: "74691599a5bc750dc96a6b4bfd48f7d9d66453eab04c7f4063134800d6a5c573"
       url: "https://pub.dev"
     source: hosted
-    version: "2.4.15"
+    version: "2.4.14"
   build_runner_core:
     dependency: transitive
     description:
@@ -185,6 +185,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "3.1.2"
+  cross_file:
+    dependency: transitive
+    description:
+      name: cross_file
+      sha256: "7caf6a750a0c04effbb52a676dce9a4a592e10ad35c34d6d2d0e4811160d5670"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.3.4+2"
   crypto:
     dependency: "direct main"
     description:
@@ -249,6 +257,62 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "7.0.1"
+  file_selector_linux:
+    dependency: transitive
+    description:
+      name: file_selector_linux
+      sha256: "54cbbd957e1156d29548c7d9b9ec0c0ebb6de0a90452198683a7d23aed617a33"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.9.3+2"
+  file_selector_macos:
+    dependency: transitive
+    description:
+      name: file_selector_macos
+      sha256: "271ab9986df0c135d45c3cdb6bd0faa5db6f4976d3e4b437cf7d0f258d941bfc"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.9.4+2"
+  file_selector_platform_interface:
+    dependency: transitive
+    description:
+      name: file_selector_platform_interface
+      sha256: a3994c26f10378a039faa11de174d7b78eb8f79e4dd0af2a451410c1a5c3f66b
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.6.2"
+  file_selector_windows:
+    dependency: transitive
+    description:
+      name: file_selector_windows
+      sha256: "320fcfb6f33caa90f0b58380489fc5ac05d99ee94b61aa96ec2bff0ba81d3c2b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.9.3+4"
+  firebase_auth:
+    dependency: "direct main"
+    description:
+      name: firebase_auth
+      sha256: cfc2d970829202eca09e2896f0a5aa7c87302817ecc0bdfa954f026046bf10ba
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.20.0"
+  firebase_auth_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_auth_platform_interface
+      sha256: a0270e1db3b2098a14cb2a2342b3cd2e7e458e0c391b1f64f6f78b14296ec093
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.3.0"
+  firebase_auth_web:
+    dependency: transitive
+    description:
+      name: firebase_auth_web
+      sha256: "64e067e763c6378b7e774e872f0f59f6812885e43020e25cde08f42e9459837b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.12.0"
   firebase_core:
     dependency: "direct main"
     description:
@@ -269,10 +333,10 @@ packages:
     dependency: transitive
     description:
       name: firebase_core_web
-      sha256: "129a34d1e0fb62e2b488d988a1fc26cc15636357e50944ffee2862efe8929b23"
+      sha256: "362e52457ed2b7b180964769c1e04d1e0ea0259fdf7025fdfedd019d4ae2bd88"
       url: "https://pub.dev"
     source: hosted
-    version: "2.22.0"
+    version: "2.17.5"
   firebase_database:
     dependency: "direct main"
     description:
@@ -297,6 +361,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.2.5+7"
+  firebase_storage:
+    dependency: "direct main"
+    description:
+      name: firebase_storage
+      sha256: "2ae478ceec9f458c1bcbf0ee3e0100e4e909708979e83f16d5d9fba35a5b42c1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "11.7.7"
+  firebase_storage_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_storage_platform_interface
+      sha256: "4e18662e6a66e2e0e181c06f94707de06d5097d70cfe2b5141bf64660c5b5da9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.1.22"
+  firebase_storage_web:
+    dependency: transitive
+    description:
+      name: firebase_storage_web
+      sha256: "3a44aacd38a372efb159f6fe36bb4a7d79823949383816457fd43d3d47602a53"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.9.7"
   fixnum:
     dependency: transitive
     description:
@@ -323,6 +411,14 @@ packages:
     description: flutter
     source: sdk
     version: "0.0.0"
+  flutter_plugin_android_lifecycle:
+    dependency: transitive
+    description:
+      name: flutter_plugin_android_lifecycle
+      sha256: f948e346c12f8d5480d2825e03de228d0eb8c3a737e4cdaa122267b89c022b5e
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.28"
   flutter_riverpod:
     dependency: "direct main"
     description:
@@ -365,6 +461,54 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "12.1.3"
+  google_identity_services_web:
+    dependency: transitive
+    description:
+      name: google_identity_services_web
+      sha256: "5d187c46dc59e02646e10fe82665fc3884a9b71bc1c90c2b8b749316d33ee454"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.3.3+1"
+  google_sign_in:
+    dependency: "direct main"
+    description:
+      name: google_sign_in
+      sha256: d0a2c3bcb06e607bb11e4daca48bd4b6120f0bbc4015ccebbe757d24ea60ed2a
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.0"
+  google_sign_in_android:
+    dependency: transitive
+    description:
+      name: google_sign_in_android
+      sha256: d5e23c56a4b84b6427552f1cf3f98f716db3b1d1a647f16b96dbb5b93afa2805
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.2.1"
+  google_sign_in_ios:
+    dependency: transitive
+    description:
+      name: google_sign_in_ios
+      sha256: "102005f498ce18442e7158f6791033bbc15ad2dcc0afa4cf4752e2722a516c96"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.9.0"
+  google_sign_in_platform_interface:
+    dependency: transitive
+    description:
+      name: google_sign_in_platform_interface
+      sha256: "5f6f79cf139c197261adb6ac024577518ae48fdff8e53205c5373b5f6430a8aa"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.0"
+  google_sign_in_web:
+    dependency: transitive
+    description:
+      name: google_sign_in_web
+      sha256: "460547beb4962b7623ac0fb8122d6b8268c951cf0b646dd150d60498430e4ded"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.12.4+4"
   graphs:
     dependency: transitive
     description:
@@ -397,6 +541,70 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "4.1.2"
+  image_picker:
+    dependency: "direct main"
+    description:
+      name: image_picker
+      sha256: "021834d9c0c3de46bf0fe40341fa07168407f694d9b2bb18d532dc1261867f7a"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  image_picker_android:
+    dependency: transitive
+    description:
+      name: image_picker_android
+      sha256: "317a5d961cec5b34e777b9252393f2afbd23084aa6e60fcf601dcf6341b9ebeb"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.8.12+23"
+  image_picker_for_web:
+    dependency: transitive
+    description:
+      name: image_picker_for_web
+      sha256: "717eb042ab08c40767684327be06a5d8dbb341fe791d514e4b92c7bbe1b7bb83"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.6"
+  image_picker_ios:
+    dependency: transitive
+    description:
+      name: image_picker_ios
+      sha256: "05da758e67bc7839e886b3959848aa6b44ff123ab4b28f67891008afe8ef9100"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.8.12+2"
+  image_picker_linux:
+    dependency: transitive
+    description:
+      name: image_picker_linux
+      sha256: "34a65f6740df08bbbeb0a1abd8e6d32107941fd4868f67a507b25601651022c9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.2.1+2"
+  image_picker_macos:
+    dependency: transitive
+    description:
+      name: image_picker_macos
+      sha256: "1b90ebbd9dcf98fb6c1d01427e49a55bd96b5d67b8c67cf955d60a5de74207c1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.2.1+2"
+  image_picker_platform_interface:
+    dependency: transitive
+    description:
+      name: image_picker_platform_interface
+      sha256: "886d57f0be73c4b140004e78b9f28a8914a09e50c2d816bdd0520051a71236a0"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.10.1"
+  image_picker_windows:
+    dependency: transitive
+    description:
+      name: image_picker_windows
+      sha256: "6ad07afc4eb1bc25f3a01084d28520496c4a3bb0cb13685435838167c9dcedeb"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.2.1+1"
   intl:
     dependency: "direct main"
     description:
@@ -417,10 +625,10 @@ packages:
     dependency: transitive
     description:
       name: js
-      sha256: "53385261521cc4a0c4658fd0ad07a7d14591cf8fc33abbceae306ddb974888dc"
+      sha256: f2c445dce49627136094980615a031419f7f3eb393237e4ecd97ac15dea343f3
       url: "https://pub.dev"
     source: hosted
-    version: "0.7.2"
+    version: "0.6.7"
   json_annotation:
     dependency: "direct main"
     description:
@@ -689,10 +897,10 @@ packages:
     dependency: transitive
     description:
       name: shelf_web_socket
-      sha256: "3632775c8e90d6c9712f883e633716432a27758216dfb61bd86a8321c0580925"
+      sha256: cc36c297b52866d203dbf9332263c94becc2fe0ceaa9681d07b6ef9807023b67
       url: "https://pub.dev"
     source: hosted
-    version: "3.0.0"
+    version: "2.0.1"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -838,10 +1046,10 @@ packages:
     dependency: transitive
     description:
       name: web
-      sha256: "868d88a33d8a87b18ffc05f9f030ba328ffefba92d6c127917a2ba740f9cfe4a"
+      sha256: "97da13628db363c635202ad97068d47c5b8aa555808e7a9411963c533b449b27"
       url: "https://pub.dev"
     source: hosted
-    version: "1.1.1"
+    version: "0.5.1"
   web_socket:
     dependency: transitive
     description:
diff --git a/pubspec.yaml b/pubspec.yaml
index d36aecb..fff131d 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -33,7 +33,9 @@ dependencies:
   cupertino_icons: ^1.0.8
   cloud_firestore: ^4.13.2
   firebase_core: ^2.25.4
+  firebase_auth: ^4.17.4
   firebase_database: ^10.3.7
+  google_sign_in: ^6.2.1
   shared_preferences: ^2.2.2
   uuid: ^4.1.0
   provider: ^6.1.1
@@ -45,6 +47,8 @@ dependencies:
   intl: ^0.19.0
   json_annotation: ^4.9.0
   flutter_riverpod: ^2.4.9
+  image_picker: ^1.0.7
+  firebase_storage: ^11.6.7
 
   # The following adds the Cupertino Icons font to your application.
   # Use with the CupertinoIcons class for iOS style icons.
@@ -59,7 +63,7 @@ dev_dependencies:
   # package. See that file for information about deactivating specific lint
   # rules and activating additional ones.
   flutter_lints: ^5.0.0
-  build_runner: ^2.4.15
+  build_runner: ^2.4.14
   json_serializable: ^6.9.5
   mockito: ^5.4.6
 
diff --git a/windows/flutter/generated_plugin_registrant.cc b/windows/flutter/generated_plugin_registrant.cc
index eeeeb11..ec1e463 100644
--- a/windows/flutter/generated_plugin_registrant.cc
+++ b/windows/flutter/generated_plugin_registrant.cc
@@ -7,11 +7,20 @@
 #include "generated_plugin_registrant.h"
 
 #include <cloud_firestore/cloud_firestore_plugin_c_api.h>
+#include <file_selector_windows/file_selector_windows.h>
+#include <firebase_auth/firebase_auth_plugin_c_api.h>
 #include <firebase_core/firebase_core_plugin_c_api.h>
+#include <firebase_storage/firebase_storage_plugin_c_api.h>
 
 void RegisterPlugins(flutter::PluginRegistry* registry) {
   CloudFirestorePluginCApiRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("CloudFirestorePluginCApi"));
+  FileSelectorWindowsRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FileSelectorWindows"));
+  FirebaseAuthPluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FirebaseAuthPluginCApi"));
   FirebaseCorePluginCApiRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("FirebaseCorePluginCApi"));
+  FirebaseStoragePluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FirebaseStoragePluginCApi"));
 }
diff --git a/windows/flutter/generated_plugins.cmake b/windows/flutter/generated_plugins.cmake
index 448a2c3..767b528 100644
--- a/windows/flutter/generated_plugins.cmake
+++ b/windows/flutter/generated_plugins.cmake
@@ -4,7 +4,10 @@
 
 list(APPEND FLUTTER_PLUGIN_LIST
   cloud_firestore
+  file_selector_windows
+  firebase_auth
   firebase_core
+  firebase_storage
 )
 
 list(APPEND FLUTTER_FFI_PLUGIN_LIST
